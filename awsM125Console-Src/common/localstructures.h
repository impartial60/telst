#pragma once
#ifndef LOCALSTRUCTURES_H
#define LOCALSTRUCTURES_H
#pragma pack(push, 1)

#include <QtGlobal>
#include <QTime>

/* Структура параметрических координат:
 * L - растояние до цели по направлению на встречу цели, м
 * P - курсовой параметр цели, м
 * H - высота, м
*/
typedef struct {
    double l = 0.0;
    double p = 0.0;
    double h = 0.0;
} sLPH;


/* Структура прямоугольной системы координат:
 * North - север, м
 * East  - восток, м
 * Height - высота, м
*/
typedef struct {
    double  north  = 0.0;
    double  east   = 0.0;
    double  height = 0.0;
} sCoordinates;

//typedef struct
//{
//    quint8  cat = 27;           // Номер категории
//    quint16 num = 0;            // Номер цели

//    bool cu = false;            // Признак ЦУ по цели от ВКП
//    bool cancelCU = false;      // Признак отмены ЦУ от ВКП
//    bool cuCmd = false;         // Признак ЦУ подтверждено командиром
//    bool cuAvt = false;         // Признак автономного ЦУ
//    bool cancelCUCmd = false;   // Признак отмены ЦУ командиром

//    sCoordinates coordinates;   /* Структура содержит координаты цели:
//                                * North - координаты по оси на север, м
//                                * Height - координаты по высоте, м
//                                * West - координаты по оси на восток, м
//                                */

//    quint16 crc = 0;            // Контрольная сумма структуры
//    QTime sendStrTime;          // Время отправки посылки
//} data_27; // Структура данных №27 для офицера наведения


enum class commands {		// Набор команд с рабочего места командира:
    cu,                         // Признак ЦУ по цели от ВКП
    cancelCU,                   // Признак отмены ЦУ от ВКП
    cuAvt,                      // Признак автономного ЦУ
    cancelCUCmd,                // Признак отмены ЦУ командиром
    br,                         // Признак команды "Боевая работа"
    fk,                         // Признак команды "Функциональный контроль"
    tr,                         // Признак команды "Автономный тренаж"
    rr,                         // Признак команды "Регламентные работы"
    noCommand                   // Нет команды
};

typedef struct
{
    quint8  cat = 27;           // Номер категории
    quint16 num = 0;            // Номер цели

    commands com;               // Признак команды от ВКП или командира
    bool cuCmd = false;         // Признак ЦУ подтверждено командиром

    sCoordinates coordinates;   /* Структура содержит координаты цели:
                                * North - координаты по оси на север, м
                                * Height - координаты по высоте, м
                                * West - координаты по оси на восток, м
                                */

    quint16 crc = 0;            // Контрольная сумма структуры
    QTime sendStrTime;          // Время отправки посылки
} data_27; // Структура данных №27 для офицера наведения


typedef struct
{   // Количество равное нулю не несет информации.
    quint8 krpR = 0;            // КРП_Р - кол-во ракет, кот. нужно поставить на подготовку разово
    quint8 krpN = 0;            // КРП_Н - кол-во ракет, кот. нужно поставить на подготовку непрерывно
    bool ogC = 0;               // ОГ: 1 - ограничить кол-во расхода ракет, 0 - нет ограничения
} rc1;

typedef struct
{   // Количество равное нулю не несет информации.
    quint8 opR = 0;             // ОП_Р - кол-во ракет, кот. нужно отменить подготовку разово
    quint8 opN = 0;             // ОП_Н - кол-во ракет, кот. нужно отменить подготовку непрерывно
} rc2;

typedef struct
{
    quint8  cat = 31;           // Номер категории
    bool zPR = false;           // Запрет пуска ракет по цели

    rc1 R27DReady;   // Подготовка ракет типа 27Д
    rc1 R27DM1Ready; // Подготовка ракет типа 27ДМ1
    rc1 R27DM2Ready; // Подготовка ракет типа 27ДМ2

    rc2 R27DCancel;   // Отмена подготовки ракет типа 27Д
    rc2 R27DM1Cancel; // Отмена подготовки ракет типа 27ДМ1
    rc2 R27DM2Cancel; // Отмена подготовки ракет типа 27ДМ2

    quint16 crc = 0;         // Контрольная сумма структуры
    QTime sendStrTime;  // Время отправки посылки
} data_31; // Структура команд №31 для офицера пуска



#pragma pack(pop)
#endif // LOCALSTRUCTURES_H
